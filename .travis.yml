# sudo: required
# services:
# - docker
# env:
#   global:
#   - SHA=$(git rev-parse HEAD)
# before_install:
# - openssl aes-256-cbc -K $encrypted_e80afc6d3e27_key -iv $encrypted_e80afc6d3e27_iv -in service-account.json.enc -out service-account.json -d
# - 
# - source $HOME/google-cloud-sdk/path.bash.inc
# - gcloud components update kubectl
# - gcloud auth activate-service-account --key-file ./service-account.json
# - gcloud config set project multi-k8s-252416
# - gcloud config set compute/zone us-central1-a
# - gcloud container clusters get-credentials multi-cluster
# - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

# script:
# - kubectl apply -f ./k8s/application
# - kubectl apply -f ./k8s/monitoring/prometheus
# - kubectl apply -f ./k8s/monitoring/grafana

sudo: required
services:
- docker
env:
  global:
  - SHA=$(git rev-parse HEAD)
  - CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
  # - openssl aes-256-cbc -K $encrypted_e80afc6d3e27_key -iv $encrypted_e80afc6d3e27_iv -in service-account.json.enc -out service-account.json -d
  # - curl https://sdk.cloud.google.com | bash > /dev/null;
  # - source $HOME/google-cloud-sdk/path.bash.inc
  # - gcloud components update kubectl
  # - gcloud auth activate-service-account --key-file ./service-account.json
  # - gcloud config set project multi-k8s-252416
  # - gcloud config set compute/zone us-central1-a
  # - gcloud container clusters get-credentials multi-cluster
  # - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

  # Install kubectl
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - sudo mv kubectl /usr/local/bin
  # Setup default AWS credentials.
  # aws_access_key_id = AKIAQ66KETYT4X2RZB75
  # aws_secret_access_key = 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
  - aws configure set default.aws_access_key_id AKIAQ66KETYT4X2RZB75
  - aws configure set default.aws_secret_access_key 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
  - aws eks --region us-east-2 update-kubeconfig --name Dev

script:
  # - kubectl apply -f ./k8s/application
  # - kubectl apply -f ./k8s/monitoring/prometheus
  # - kubectl apply -f ./k8s/monitoring/grafana
  - kubectl get pods


# language: go
# go: 1.13.4
# sudo: true # give us 7.5GB and >2 bursted cores.
# git:
#   depth: false
# before_install:
#     - git clone https://github.com/pulumi/scripts ${GOPATH}/src/github.com/pulumi/scripts
#     - source ${GOPATH}/src/github.com/pulumi/scripts/ci/prepare-environment.sh
#     - source ${PULUMI_SCRIPTS}/ci/keep-failed-tests.sh
# install:
#     # Install kubectl
#     - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
#     - chmod +x ./kubectl
#     - sudo mv kubectl /usr/local/bin
#     # Setup default AWS credentials.
#     - aws configure set default.aws_access_key_id $DEFAULT_AWS_ACCESS_KEY_ID
#     - aws configure set default.aws_secret_access_key $DEFAULT_AWS_SECRET_ACCESS_KEY
#     # Setup alternative AWS credentials using an AWS Named Profile for testing.
#     - aws configure set aws_access_key_id $ALT_AWS_ACCESS_KEY_ID --profile $ALT_AWS_PROFILE
#     - aws configure set aws_secret_access_key $ALT_AWS_SECRET_ACCESS_KEY --profile $ALT_AWS_PROFILE